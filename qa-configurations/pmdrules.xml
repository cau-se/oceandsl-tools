<?xml version="1.0"?>
<ruleset name="OceanDSL PMD ruleset" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd"
	xsi:noNamespaceSchemaLocation="http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
	<description>This ruleset is checked for OceanDSL automatically.</description>

	<!-- exclude generated code -->
	<exclude-pattern>.*/src/gen/.*</exclude-pattern>
	<exclude-pattern>.*/test/gen/.*</exclude-pattern>


	<rule ref="category/java/bestpractices.xml">
		<exclude name="UseVarargs" />
		<exclude name="JUnitTestsShouldIncludeAssert"/>
	</rule>
	
	<rule ref="category/java/codestyle.xml">
		<exclude name="AtLeastOneConstructor"/>
		<exclude name="AvoidFinalLocalVariable" />
		<exclude name="CallSuperInConstructor"/>
		<exclude name="ConfusingTernary"/>
		<exclude name="LongVariable" />
		<exclude name="OnlyOneReturn" />
		<exclude name="PackageCase" />
		<exclude name="ShortClassName" />
		<exclude name="ShortVariable" />
		<exclude name="UnnecessaryModifier" />
		<exclude name="UselessParentheses" />
		<exclude name="UseUnderscoresInNumericLiterals" />
	</rule>


	<rule ref="category/java/design.xml">
		<exclude name="AvoidThrowingNullPointerException"/>
		<exclude name="CyclomaticComplexity"/>
		<exclude name="DataClass"/>
		<exclude name="ExcessiveImports" />
		<exclude name="GodClass" />
		<exclude name="LawOfDemeter" />
		<exclude name="LoosePackageCoupling" />
		<exclude name="NPathComplexity" />
		<exclude name="SignatureDeclareThrowsException" />
		<exclude name="TooManyMethods" />
		<exclude name="UseObjectForClearerAPI" />
	</rule>


	<rule ref="category/java/errorprone.xml">
		<exclude name="AvoidCatchingNPE" />
		<exclude name="AvoidLiteralsInIfCondition" />
		<exclude name="AssignmentInOperand"/>
		<exclude name="DataflowAnomalyAnalysis" />
		<exclude name="DoNotTerminateVM" />
		<exclude name="UseProperClassLoader" />
		<exclude name="LoggerIsNotStaticFinal" />
	</rule>
	<!-- We want to customize this rule a bit, change the message and raise the priority  -->
	<rule ref="category/java/errorprone.xml/EmptyCatchBlock" message="Must handle exceptions">
		<priority>2</priority>
	</rule>

	<rule ref="category/java/documentation.xml">
		<exclude name="CommentSize" />
	</rule>		
	<rule ref="category/java/documentation.xml/CommentRequired">
		<!-- <priority>5</priority> -->
		<properties>
			<property name="violationSuppressXPath"
				value="//ClassOrInterfaceBodyDeclaration/MethodDeclaration/MethodDeclarator[matches(@Image,'(get|is|set)[\p{Lu}].*') and not(FormalParameters/FormalParameter)]" />
			<property name="fieldCommentRequirement" value="Ignored" />
			<property name="protectedMethodCommentRequirement" value="Ignored" />
			<property name="publicMethodCommentRequirement" value="Ignored" />
		</properties>
	</rule>

	<rule ref="category/java/multithreading.xml">
		<exclude name="DoNotUseThreads" />
		<exclude name="UseConcurrentHashMap"/>
	</rule>
	

	<rule ref="category/java/performance.xml">
		<exclude name="AvoidInstantiatingObjectsInLoops"/>
		<exclude name="SimplifyStartsWith" />
		<exclude name="UseStringBufferForStringAppends" />
		<exclude name="OptimizableToArrayCall"/>
	</rule>

	<rule ref="category/java/performance.xml/ConsecutiveLiteralAppends">
    		<properties>
    			<property name="threshold" value="2"/>
    		</properties>
    </rule>
    
    <rule ref="category/java/codestyle.xml/ClassNamingConventions">
        <properties>
            <property name="utilityClassPattern" value="[A-Z][a-zA-Z0-9]*(Utils|Factory|Constants)" />
        </properties>
    </rule>


</ruleset>
