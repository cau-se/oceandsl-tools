/*
* This file was generated by the Gradle 'init' task.
*
* This generated file contains a sample Java application project to get you started.
* For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
* User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
*/

plugins {
	id 'com.github.johnrengelman.shadow' version '7.1.1'
	id 'java'
	id 'application'
}

// from https://discuss.gradle.org/t/dependency-local-project-or-external-jar/6722/2
// extended so that we can configure "force use" of the library by creating a
// file with a corresponding name. This can be used for testing, but mainly is
// to be required in docker since the "detect local copy of datastructure-utils"
// seems to produce a "false positive" (probably since the root folder is the
// root
project.ext.localRemote = { aProjectName ->
	if(rootProject.file('./force-use-library-' + aProjectName).exists()) {
	project.logger.lifecycle('ignoring local copies of ' + aProjectName)
	dependencies.create files('libs/'+aProjectName+'.jar')
	}
	else {
		if(rootProject.file('../' + aProjectName).exists()) {
			project.logger.lifecycle('found ' + aProjectName + ' locally.')
			dependencies.create project(':'+aProjectName)
			dependencies.create files('libs/'+aProjectName+'.jar')
		} else {
			project.logger.lifecycle('did not find ' + aProjectName + ' locally, using library.')
			dependencies.create files('libs/'+aProjectName+'.jar')
		}
	}
}



repositories {
	mavenCentral()
	mavenLocal()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven { url "https://oss.sonatype.org/content/repositories/releases/" }
}

dependencies {
	testImplementation 'junit:junit:4.13.2'

	implementation 'junit:junit:4.13.2'

	implementation 'com.google.guava:guava:30.1.1-jre'

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	testCompileOnly 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

	//implementation project(':datastructure-utils')
	implementation localRemote('datastructure-utils')
	implementation files('libs/common-1.3.0-SNAPSHOT.jar') // implementation 'org.oceandsl:common:1.3.0-SNAPSHOT'
	implementation files('libs/analysis-1.3.0-SNAPSHOT.jar')// implementation 'org.oceandsl:analysis:1.3.0-SNAPSHOT'

	implementation 'org.apache.commons:commons-csv:1.9.0'
	implementation 'org.apache.commons:commons-collections4:4.4'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'net.sourceforge.teetime:teetime:3.1-SNAPSHOT'
	implementation 'net.kieker-monitoring:kieker:2.0.0-SNAPSHOT'
	implementation 'org.eclipse.emf:org.eclipse.emf.ecore:2.23.0'
	implementation 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.16.0'
	implementation group: 'org.apache.commons', name:'commons-lang3', version:'3.9'
	implementation 'commons-io:commons-io:2.11.0'
	implementation group: 'org.apache.ant', name:'ant', version: '1.8.2'
}

shadowJar {
archiveBaseName.set('shadow')
archiveClassifier.set('')
archiveVersion.set('')
}

jar {
	manifest {
		attributes "Main-Class": 'cau.agse.hs.staticfortran.main.FxcaMain'
	}
}

mainClassName = 'cau/agse/hs/staticfortran/main/FxcaMain'
