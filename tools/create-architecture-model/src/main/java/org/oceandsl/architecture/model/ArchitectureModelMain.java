/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.oceandsl.architecture.model;

import java.io.File;
import java.io.IOException;

import com.beust.jcommander.JCommander;

import kieker.common.configuration.Configuration;
import kieker.common.exception.ConfigurationException;
import kieker.tools.common.AbstractService;

public class ArchitectureModelMain extends AbstractService<TeetimeConfiguration,ArchitectureModelSettings>{
   
    public static void main(String[] args) {
    	 java.lang.System.exit(new ArchitectureModelMain().run("Kieker Log ELF Rewriter",
    		        "log-rewriter", args, new ArchitectureModelSettings()));
    }

	@Override
	protected TeetimeConfiguration createTeetimeConfiguration() throws ConfigurationException {
		try {
			return new TeetimeConfiguration(this.parameterConfiguration);
		} catch (IOException e) {
			throw new ConfigurationException(e);
		}
	}

	@Override
	protected File getConfigurationFile() {
		// we do not use a configuration file
		return null;
	}

	@Override
	protected boolean checkConfiguration(Configuration configuration, JCommander commander) {
		return true;
	}

	@Override
	protected boolean checkParameters(JCommander commander) throws ConfigurationException {
		if (!this.parameterConfiguration.getAddrlineExecutable().canExecute()) {
			this.logger.error("Addr2line file {} is not executable", this.parameterConfiguration.getAddrlineExecutable());
			return false;
		}
		if (!this.parameterConfiguration.getModelExecutable().canExecute()) {
			this.logger.error("Model file {} is not executable", this.parameterConfiguration.getModelExecutable());
			return false;
		}
		if (!this.parameterConfiguration.getInputFile().isDirectory()) {
			this.logger.error("Input directory {} is not directory", this.parameterConfiguration.getInputFile());
			return false;
		}
		if (!this.parameterConfiguration.getOutputFile().isDirectory()) {
			this.logger.error("Output directory {} is not directory", this.parameterConfiguration.getOutputFile());
			return false;
		}
		return true;
	}

	@Override
	protected void shutdownService() {
		// TODO Auto-generated method stub
		
	}
}
